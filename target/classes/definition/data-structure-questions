Please answer the below Data Structure Questions:

why do we need data structure?
A.To store organizing information.

What are the various operations that can be performed on different Data Structures?
A. cTraversing - Searching - Inserting - Deleting - Sorting - Merging - Traversing.

List out the areas in which data structures are applied extensively?
A. 1.Compiler Design
   2.Operating System
   3.Database Management System
   4.Statistical analysis package
   5.Numerical Analysis
   6.Graphics
   7.Artificial Intelligence
   8.Simulation


what is an Array?
A. An array is a container object that holds a fixed number of values of a single type.

what is the difference between the Array and ArrayList?
A. Array is fixed in size while an ArrayList is dynamically growing.

what is LinkedList?
A. A linked list is a linear data structure where each element is a separate object.

How is an Array different from Linked List?
A. In array, each element is independent, no connection with previous element or with its location. In Linked list,
location or address of elements is stored in the link part of previous element/nod

what is queue?
A. A queue is designed to have elements inserted at the end of the queue,
   and elements removed from the beginning of the queue.

what is stack?
A. It is a collection that is based on the last in first out (LIFO) principle.

what is FIFO and LIFO?
A. First in first out, last in first out

what is the order of complexity?
A. Time complexity describes how the runtime of an algorithm changes depending on the amount of input data.
   The most common complexity classes are (in ascending order of complexity): O(1), O(log n), O(n), O(n log n), O(n²).

what is the best case to search an element from an array?
A. Sequential search is the best that we can do when trying to find a value in an unsorted array.

what is the worst case to search an element from an array?
A. The worst-case performance is when the search item appears at the end of the list or not at all.
   This would require N comparisons, hence, the worse case is O(N).

what is tree in data structure?
A. A tree is a non-linear data structure where data objects are organized in terms of hierarchical
         relationship.
what is graph in data structure?
A.  A graph is an object consisting of a vertex set and edge set.

what is the difference between the HashTable and HashMap?
A.  HashTable is synchronized whereas hashmap is not.


What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
A. RDBMS uses Arrays (Array of structures).
          Network data model uses Graph.
          Hierarchical data model uses Trees.


How HashMap works in java?
A. HashMap uses multiple buckets and each bucket points to a singly linked list where the entries (nodes)
         are stored. once the bucket is identified by the hash function using hashcode, then hashcode is used to
         check if there is already a key with the same hashcode or not in the bucket(singly linked list).


What is ArrayIndexOutOfBoundsException in java? When it occurs?
A. Thrown to indicate that an Array has been accessed with an illegal index. it occurs when we access
         an array, or a collection, that is backed by an with an invalid index.

What are the different ways of copying an array into another array?
A.       1.Manually
         2. You can use a for loop and copy elements of one to another one by one.
         3. System.arraycopy()


What is difference between an array and a linked list?
A. In array, each element is independent, no connection with previous element or with its location.
         In Linked list,location or address of elements is stored in the link part of previous element/node. If you are manipulating data use linkedlist.

What is DFS and BFS?
A. The breadth first search (BFS) and the depth first search (DFS) are the two algorithms used for
         traversing and searching a node in a graph.They can also be used to find out whether a node is
         reachable from a given node or not.

What is Recursion?
A. A method that calls itself.

What are linear and non linear data Structures?
A. In a linear data structure, data elements are arranged in a linear order where each and every
         element is attached to its previous and next adjacent. In a non-linear data structure, data elements
         are attached in hierarchically manner.


What is Big-(O)-notation?
A. Big O notation is used to describe the performance or complexity of an algorithm.

Outlined different kind of sorting algorithm with time complexity?
A.             1.Selection sort
               2.Merge sort
               3.Heapsort
               4.Quicksort
               5.Bubble sort
               6.Shellsort
               7.Comb sort
Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.

  Time complexities of different data structures :

  Time Complexity is a concept in computer science that deals with the quantification of the amount of time taken by a set of code or algorithm to process or run as a function of the amount of input. In other words, the time complexity is how long a program takes to process a given input. The efficiency of an algorithm depends on two parameters :

  1. Time Complexity

  2. Space Complexity

  Time Complexity:

  It is defined as the number of times a particular instruction set is executed rather than the total time is taken. It is because the total time took also depends on some external factors like the compiler used, processor’s speed, etc.

  Space Complexity:

  It is the total memory space required by the program for its execution.

  Average time complexity of different data structures for different operations :

  Data structure	Access	Search	Insertion	Deletion
  Array	O(1)	O(N)	O(N)	O(N)
  Stack	O(N)	O(N)	O(1)	O(1)
  Queue	O(N)	O(N)	O(1)	O(1)
  Singly Linked list	O(N)	O(N)	O(1)	O(1)
  Doubly Linked List	O(N)	O(N)	O(1)	O(1)
  Hash Table	O(1)	O(1)	O(1)	O(1)
  Binary Search Tree	O(logN)	O(logN)	O(logN)	O(logN)
  AVL Tree	O(logN)	O(logN)	O(logN)	O(logN)
  B Tree	O(logN)	O(logN)	O(logN)	O(logN)
  Red Black Tree	O(logN)	O(logN)	O(logN)	O(logN)
  Worst Case time complexity of different data structures for different operations :

  Data structure	Access	Search	Insertion	Deletion
  Array	O(1)	O(N)	O(N)	O(N)
  Stack	O(N)	O(N)	O(1)	O(1)
  Queue	O(N)	O(N)	O(1)	O(1)
  Singly linked list	O(N)	O(N)	O(1)	O(1)
  Doubly linked list	O(N)	O(N)	O(1)	O(1)
  Hash Table	O(N)	O(N)	O(N)	O(N)
  Binary search tree	O(N)	O(N)	O(N)	O(N)
  AVL Tree	O(logN)	O(logN)	O(logN)	O(logN)
  Binary Tree	O(N)	O(N)	O(N)	O(N)
  Red black tree	O(logN)	O(logN)	O(logN)
  O(logN)

  Data Structure :

  It is arrangement of various types of data in computer memory, in such a way that it is stored efficiently.

  There are various types of data structure available like arrays,Linked List,Trees,graphs,stacks, queues and hash table.

  Advantages of Data Structure :

  1. Data structures allow storing the information on hard disks.

  2. Appropriate choice of ADT (Abstract Data Type) makes the program more efficient.

  3. Data Structures are necessary for designing efficient algorithms.

  4. It provides reusability and abstraction .

  5. Using appropriate data structure, can help programmers save a good amount of time while performing operations such as storage, retrieval or processing of data.

  6.Manipulation of large amounts of data is easier.

  Disadvantages of Data Structure :

  1. An application using data structure requires highly qualified professional resource to manage the operations related to data structure.

  2. Bigger the application or data structure involved in creating and maintaining application more is the requirement of man power.
